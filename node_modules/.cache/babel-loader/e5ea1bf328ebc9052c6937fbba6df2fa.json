{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/dec/clone-dropxbox-menu/src/components/SideMenu/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container } from \"./styles\";\nconst scrollThreshold = 300;\n\nconst SideMenu = ({\n  children\n}) => {\n  const [isActive, setIsActive] = useState(false);\n  const [scrollY, setScrollY] = useState(0);\n  useEffect(() => {\n    function onScroll() {\n      setScrollY(window.scrollY);\n      setIsActive(false);\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [scrollY]);\n  const classes = [isActive ? \"open\" : \"\", scrollY <= scrollThreshold ? \"scrollOpen\" : \"\"];\n  const className = classes.join(\" \").trim();\n\n  function toggleActiveMenu() {\n    setIsActive(prev => !prev);\n  }\n\n  window.toggleActiveMenu = toggleActiveMenu;\n  return /*#__PURE__*/React.createElement(Container, {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nexport default SideMenu;","map":{"version":3,"sources":["/home/gabriel/dec/clone-dropxbox-menu/src/components/SideMenu/index.tsx"],"names":["React","useState","useEffect","Container","scrollThreshold","SideMenu","children","isActive","setIsActive","scrollY","setScrollY","onScroll","window","addEventListener","removeEventListener","classes","className","join","trim","toggleActiveMenu","prev"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,UAA1B;AAQA,MAAMC,eAAe,GAAG,GAAxB;;AAEA,MAAMC,QAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,aAASS,QAAT,GAAoB;AAClBD,MAAAA,UAAU,CAACE,MAAM,CAACH,OAAR,CAAV;AACAD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAEDI,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,QAAlC;AAEA,WAAO,MAAMC,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCH,QAArC,CAAb;AACD,GATQ,EASN,CAACF,OAAD,CATM,CAAT;AAWA,QAAMM,OAAO,GAAG,CACdR,QAAQ,GAAG,MAAH,GAAY,EADN,EAEdE,OAAO,IAAIL,eAAX,GAA6B,YAA7B,GAA4C,EAF9B,CAAhB;AAIA,QAAMY,SAAS,GAAGD,OAAO,CAACE,IAAR,CAAa,GAAb,EAAkBC,IAAlB,EAAlB;;AAEA,WAASC,gBAAT,GAA4B;AAC1BX,IAAAA,WAAW,CAAEY,IAAD,IAAU,CAACA,IAAZ,CAAX;AACD;;AAEDR,EAAAA,MAAM,CAACO,gBAAP,GAA0BA,gBAA1B;AAEA,sBAAO,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEH,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCV,QAAlC,CAAP;AACD,CA5BD;;AA8BA,eAAeD,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Container } from \"./styles\";\n\ndeclare global {\n  interface Window {\n    toggleActiveMenu: (() => void) | undefined;\n  }\n}\n\nconst scrollThreshold = 300;\n\nconst SideMenu: React.FC = ({ children }) => {\n  const [isActive, setIsActive] = useState(false);\n  const [scrollY, setScrollY] = useState(0);\n\n  useEffect(() => {\n    function onScroll() {\n      setScrollY(window.scrollY);\n      setIsActive(false);\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [scrollY]);\n\n  const classes = [\n    isActive ? \"open\" : \"\",\n    scrollY <= scrollThreshold ? \"scrollOpen\" : \"\",\n  ];\n  const className = classes.join(\" \").trim();\n\n  function toggleActiveMenu() {\n    setIsActive((prev) => !prev);\n  }\n\n  window.toggleActiveMenu = toggleActiveMenu;\n\n  return <Container className={className}>{children}</Container>;\n};\n\nexport default SideMenu;\n"]},"metadata":{},"sourceType":"module"}